// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace DomainClasses
{

    // FinshToStor
    ///<summary>
    /// quality_be.[FinshToStor]
    ///</summary>
    public class DrumProductivity
    {

        ///<summary>
        /// quality_be.[FinshToStor].[WO]
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Wo")]
        public string Wo { get; set; } // WO (Primary key) (length: 20)

        ///<summary>
        /// quality_be.[FinshToStor].[DrmNo]
        ///</summary>
        [Required(AllowEmptyStrings = true)]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Drm no")]
        public string WoodenNo { get; set; } // DrmNo (Primary key) (length: 20)

        ///<summary>
        /// quality_be.[FinshToStor].[WODrm]
        ///</summary>
        [Display(Name = "SN")]
        public int SN { get; set; } // WODrm

        ///<summary>
        /// quality_be.[FinshToStor].[FCFSId]
        ///</summary>
        [Display(Name = "Fcfsi d")]
        public int? FcfsId { get; set; } // FCFSId

        ///<summary>
        /// quality_be.[FinshToStor].[cuDat]
        ///</summary>
        [DataType(DataType.DateTime)]
        [Display(Name = "Production Date")]
        public System.DateTime ProductionDate { get; set; } // cuDat

        ///<summary>
        /// quality_be.[FinshToStor].[CoilNo]
        ///</summary>
        [Display(Name = "Coil no")]
        public int? CoilNo { get; set; } // CoilNo

        ///<summary>
        /// quality_be.[FinshToStor].[LengthKm]
        ///</summary>
        [Display(Name = "Length km")]
        public float LengthKm { get; set; } // LengthKm

        ///<summary>
        /// quality_be.[FinshToStor].[ColorID]
        ///</summary>
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Color ID")]
        public string ColorId { get; set; } // ColorID (length: 10)

        ///<summary>
        /// quality_be.[FinshToStor].[TotWeight]
        ///</summary>
        [Display(Name = "Tot weight")]
        public float GrossWeight { get; set; } // TotWeight

        ///<summary>
        /// quality_be.[FinshToStor].[EmptWeight]
        ///</summary>
        [Display(Name = "Empt weight")]
        public float NetWeight { get; set; } // EmptWeight

        ///<summary>
        /// quality_be.[FinshToStor].[Remarks]
        ///</summary>
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Remarks")]
        public string Remarks { get; set; } // Remarks (length: 255)

        ///<summary>
        /// quality_be.[FinshToStor].[id]
        ///</summary>
        [Display(Name = "Id")]
        public int? Id { get; set; } // id

        ///<summary>
        /// quality_be.[FinshToStor].[SerCust]
        ///</summary>
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Ser cust")]
        public string SerCust { get; set; } // SerCust (length: 20)

        ///<summary>
        /// quality_be.[FinshToStor].[WIDTH]
        ///</summary>
        [Display(Name = "Width")]
        public double? Width { get; set; } // WIDTH

        ///<summary>
        /// quality_be.[FinshToStor].[DIAMETER]
        ///</summary>
        [Display(Name = "Diameter")]
        public float? Diameter { get; set; } // DIAMETER

        ///<summary>
        /// quality_be.[FinshToStor].[DrumLength]
        ///</summary>
        [Display(Name = "Drum length")]
        public int? DrumLength { get; set; } // DrumLength
        public int PrintCount { get; set; }

        public WoHeader WoHeader { get; set; }
        public Color Color { get; set; } // FK_QC_CoileProductivity_QC_Pallet

        public DrumProductivity()
        {

        }
    }

}
// </auto-generated>
