// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace DomainClasses.Mapping
{
    using DomainClasses;

    // QC_Pallet
    public class LeoniPalletDetailsConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LeoniPalletDetails>
    {
        public LeoniPalletDetailsConfiguration()
            : this("dbo")
        {
        }

        public LeoniPalletDetailsConfiguration(string schema)
        {
            ToTable("V_PR_LeoniPalletDetails", schema);
            HasKey(x => new { x.OPF, x.PalletNo });

            Property(x => x.OPF).HasColumnName(@"OPF").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.WO).HasColumnName(@"WO").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Part).HasColumnName(@"Part").HasColumnType("nvarchar").IsOptional().HasMaxLength(8);
            Property(x => x.PalletNo).HasColumnName(@"PalletNo").HasColumnType("int").IsRequired();
            Property(x => x.GWeight).HasColumnName(@"GWeight").HasColumnType("float").IsOptional();
            Property(x => x.NWeight).HasColumnName(@"NWeight").HasColumnType("float").IsOptional();
            Property(x => x.NoOfBox).HasColumnName(@"NoOfBox").HasColumnType("int").IsOptional();
            Property(x => x.ProductionDate).HasColumnName(@"ProductionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.PNoOfBox).HasColumnName(@"PNoOfBox").HasColumnType("int").IsOptional();
            Property(x => x.BoxLength).HasColumnName(@"BoxLength").HasColumnType("int").IsOptional();
            Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("float").IsOptional();
        }
    }

}
// </auto-generated>
