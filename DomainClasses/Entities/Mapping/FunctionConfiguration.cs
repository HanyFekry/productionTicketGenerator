// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;

namespace DomainClasses.Mapping
{
    using DomainClasses;

    // Ma_Function
    public class FunctionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Function>
    {
        public FunctionConfiguration()
            : this("dbo")
        {
        }

        public FunctionConfiguration(string schema)
        {
            ToTable("Ma_Function", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ArName).HasColumnName(@"AR_Name").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.EnName).HasColumnName(@"EN_Name").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.PageName).HasColumnName(@"PageName").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.IsMenue).HasColumnName(@"IsMenue").HasColumnType("bit").IsOptional();
            Property(x => x.IsReport).HasColumnName(@"IsReport").HasColumnType("bit").IsRequired();
            Property(x => x.ModuleId).HasColumnName(@"ModuleID").HasColumnType("int").IsRequired();
            Property(x => x.FaIcon).HasColumnName(@"Fa_Icon").HasColumnType("nvarchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.Module).WithMany(b => b.Functions).HasForeignKey(c => c.ModuleId).WillCascadeOnDelete(false); // FK_Ma_Function_Ma_Module
            HasMany(t => t.Roles).WithMany(t => t.Functions).Map(m =>
            {
                m.ToTable("Ma_Roles_Functions", "dbo");
                m.MapLeftKey("FunctionID");
                m.MapRightKey("RoleID");
            });
        }
    }

}
// </auto-generated>
